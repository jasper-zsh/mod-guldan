// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guldan.proto

#ifndef PROTOBUF_INCLUDED_guldan_2eproto
#define PROTOBUF_INCLUDED_guldan_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_guldan_2eproto 

namespace protobuf_guldan_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_guldan_2eproto
namespace guldan {
class GuldanConnectRequest;
class GuldanConnectRequestDefaultTypeInternal;
extern GuldanConnectRequestDefaultTypeInternal _GuldanConnectRequest_default_instance_;
class GuldanConnectResponse;
class GuldanConnectResponseDefaultTypeInternal;
extern GuldanConnectResponseDefaultTypeInternal _GuldanConnectResponse_default_instance_;
}  // namespace guldan
namespace google {
namespace protobuf {
template<> ::guldan::GuldanConnectRequest* Arena::CreateMaybeMessage<::guldan::GuldanConnectRequest>(Arena*);
template<> ::guldan::GuldanConnectResponse* Arena::CreateMaybeMessage<::guldan::GuldanConnectResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace guldan {

// ===================================================================

class GuldanConnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:guldan.GuldanConnectRequest) */ {
 public:
  GuldanConnectRequest();
  virtual ~GuldanConnectRequest();

  GuldanConnectRequest(const GuldanConnectRequest& from);

  inline GuldanConnectRequest& operator=(const GuldanConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuldanConnectRequest(GuldanConnectRequest&& from) noexcept
    : GuldanConnectRequest() {
    *this = ::std::move(from);
  }

  inline GuldanConnectRequest& operator=(GuldanConnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuldanConnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuldanConnectRequest* internal_default_instance() {
    return reinterpret_cast<const GuldanConnectRequest*>(
               &_GuldanConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GuldanConnectRequest* other);
  friend void swap(GuldanConnectRequest& a, GuldanConnectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuldanConnectRequest* New() const final {
    return CreateMaybeMessage<GuldanConnectRequest>(NULL);
  }

  GuldanConnectRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuldanConnectRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuldanConnectRequest& from);
  void MergeFrom(const GuldanConnectRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuldanConnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string world_conn_str = 1;
  void clear_world_conn_str();
  static const int kWorldConnStrFieldNumber = 1;
  const ::std::string& world_conn_str() const;
  void set_world_conn_str(const ::std::string& value);
  #if LANG_CXX11
  void set_world_conn_str(::std::string&& value);
  #endif
  void set_world_conn_str(const char* value);
  void set_world_conn_str(const char* value, size_t size);
  ::std::string* mutable_world_conn_str();
  ::std::string* release_world_conn_str();
  void set_allocated_world_conn_str(::std::string* world_conn_str);

  // @@protoc_insertion_point(class_scope:guldan.GuldanConnectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr world_conn_str_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guldan_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuldanConnectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:guldan.GuldanConnectResponse) */ {
 public:
  GuldanConnectResponse();
  virtual ~GuldanConnectResponse();

  GuldanConnectResponse(const GuldanConnectResponse& from);

  inline GuldanConnectResponse& operator=(const GuldanConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuldanConnectResponse(GuldanConnectResponse&& from) noexcept
    : GuldanConnectResponse() {
    *this = ::std::move(from);
  }

  inline GuldanConnectResponse& operator=(GuldanConnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuldanConnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuldanConnectResponse* internal_default_instance() {
    return reinterpret_cast<const GuldanConnectResponse*>(
               &_GuldanConnectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GuldanConnectResponse* other);
  friend void swap(GuldanConnectResponse& a, GuldanConnectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuldanConnectResponse* New() const final {
    return CreateMaybeMessage<GuldanConnectResponse>(NULL);
  }

  GuldanConnectResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuldanConnectResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuldanConnectResponse& from);
  void MergeFrom(const GuldanConnectResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuldanConnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guldan.GuldanConnectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guldan_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuldanConnectRequest

// string world_conn_str = 1;
inline void GuldanConnectRequest::clear_world_conn_str() {
  world_conn_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GuldanConnectRequest::world_conn_str() const {
  // @@protoc_insertion_point(field_get:guldan.GuldanConnectRequest.world_conn_str)
  return world_conn_str_.GetNoArena();
}
inline void GuldanConnectRequest::set_world_conn_str(const ::std::string& value) {
  
  world_conn_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:guldan.GuldanConnectRequest.world_conn_str)
}
#if LANG_CXX11
inline void GuldanConnectRequest::set_world_conn_str(::std::string&& value) {
  
  world_conn_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guldan.GuldanConnectRequest.world_conn_str)
}
#endif
inline void GuldanConnectRequest::set_world_conn_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  world_conn_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guldan.GuldanConnectRequest.world_conn_str)
}
inline void GuldanConnectRequest::set_world_conn_str(const char* value, size_t size) {
  
  world_conn_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guldan.GuldanConnectRequest.world_conn_str)
}
inline ::std::string* GuldanConnectRequest::mutable_world_conn_str() {
  
  // @@protoc_insertion_point(field_mutable:guldan.GuldanConnectRequest.world_conn_str)
  return world_conn_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuldanConnectRequest::release_world_conn_str() {
  // @@protoc_insertion_point(field_release:guldan.GuldanConnectRequest.world_conn_str)
  
  return world_conn_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuldanConnectRequest::set_allocated_world_conn_str(::std::string* world_conn_str) {
  if (world_conn_str != NULL) {
    
  } else {
    
  }
  world_conn_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), world_conn_str);
  // @@protoc_insertion_point(field_set_allocated:guldan.GuldanConnectRequest.world_conn_str)
}

// -------------------------------------------------------------------

// GuldanConnectResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace guldan

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_guldan_2eproto
