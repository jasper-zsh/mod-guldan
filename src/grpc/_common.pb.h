// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: _common.proto

#ifndef PROTOBUF_INCLUDED__5fcommon_2eproto
#define PROTOBUF_INCLUDED__5fcommon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf__5fcommon_2eproto 

namespace protobuf__5fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf__5fcommon_2eproto
namespace guldan {
class BoolResponse;
class BoolResponseDefaultTypeInternal;
extern BoolResponseDefaultTypeInternal _BoolResponse_default_instance_;
class Context;
class ContextDefaultTypeInternal;
extern ContextDefaultTypeInternal _Context_default_instance_;
class EmptyRequest;
class EmptyRequestDefaultTypeInternal;
extern EmptyRequestDefaultTypeInternal _EmptyRequest_default_instance_;
}  // namespace guldan
namespace google {
namespace protobuf {
template<> ::guldan::BoolResponse* Arena::CreateMaybeMessage<::guldan::BoolResponse>(Arena*);
template<> ::guldan::Context* Arena::CreateMaybeMessage<::guldan::Context>(Arena*);
template<> ::guldan::EmptyRequest* Arena::CreateMaybeMessage<::guldan::EmptyRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace guldan {

// ===================================================================

class Context : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:guldan.Context) */ {
 public:
  Context();
  virtual ~Context();

  Context(const Context& from);

  inline Context& operator=(const Context& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Context(Context&& from) noexcept
    : Context() {
    *this = ::std::move(from);
  }

  inline Context& operator=(Context&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Context& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Context* internal_default_instance() {
    return reinterpret_cast<const Context*>(
               &_Context_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Context* other);
  friend void swap(Context& a, Context& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Context* New() const final {
    return CreateMaybeMessage<Context>(NULL);
  }

  Context* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Context>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Context& from);
  void MergeFrom(const Context& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Context* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:guldan.Context)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf__5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmptyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:guldan.EmptyRequest) */ {
 public:
  EmptyRequest();
  virtual ~EmptyRequest();

  EmptyRequest(const EmptyRequest& from);

  inline EmptyRequest& operator=(const EmptyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyRequest(EmptyRequest&& from) noexcept
    : EmptyRequest() {
    *this = ::std::move(from);
  }

  inline EmptyRequest& operator=(EmptyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyRequest* internal_default_instance() {
    return reinterpret_cast<const EmptyRequest*>(
               &_EmptyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(EmptyRequest* other);
  friend void swap(EmptyRequest& a, EmptyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyRequest* New() const final {
    return CreateMaybeMessage<EmptyRequest>(NULL);
  }

  EmptyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyRequest& from);
  void MergeFrom(const EmptyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .guldan.Context context = 1;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  private:
  const ::guldan::Context& _internal_context() const;
  public:
  const ::guldan::Context& context() const;
  ::guldan::Context* release_context();
  ::guldan::Context* mutable_context();
  void set_allocated_context(::guldan::Context* context);

  // @@protoc_insertion_point(class_scope:guldan.EmptyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::guldan::Context* context_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf__5fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoolResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:guldan.BoolResponse) */ {
 public:
  BoolResponse();
  virtual ~BoolResponse();

  BoolResponse(const BoolResponse& from);

  inline BoolResponse& operator=(const BoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoolResponse(BoolResponse&& from) noexcept
    : BoolResponse() {
    *this = ::std::move(from);
  }

  inline BoolResponse& operator=(BoolResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoolResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoolResponse* internal_default_instance() {
    return reinterpret_cast<const BoolResponse*>(
               &_BoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(BoolResponse* other);
  friend void swap(BoolResponse& a, BoolResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoolResponse* New() const final {
    return CreateMaybeMessage<BoolResponse>(NULL);
  }

  BoolResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoolResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoolResponse& from);
  void MergeFrom(const BoolResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:guldan.BoolResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf__5fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Context

// uint64 id = 1;
inline void Context::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Context::id() const {
  // @@protoc_insertion_point(field_get:guldan.Context.id)
  return id_;
}
inline void Context::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:guldan.Context.id)
}

// -------------------------------------------------------------------

// EmptyRequest

// .guldan.Context context = 1;
inline bool EmptyRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void EmptyRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::guldan::Context& EmptyRequest::_internal_context() const {
  return *context_;
}
inline const ::guldan::Context& EmptyRequest::context() const {
  const ::guldan::Context* p = context_;
  // @@protoc_insertion_point(field_get:guldan.EmptyRequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::guldan::Context*>(
      &::guldan::_Context_default_instance_);
}
inline ::guldan::Context* EmptyRequest::release_context() {
  // @@protoc_insertion_point(field_release:guldan.EmptyRequest.context)
  
  ::guldan::Context* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::guldan::Context* EmptyRequest::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::guldan::Context>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:guldan.EmptyRequest.context)
  return context_;
}
inline void EmptyRequest::set_allocated_context(::guldan::Context* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:guldan.EmptyRequest.context)
}

// -------------------------------------------------------------------

// BoolResponse

// bool result = 1;
inline void BoolResponse::clear_result() {
  result_ = false;
}
inline bool BoolResponse::result() const {
  // @@protoc_insertion_point(field_get:guldan.BoolResponse.result)
  return result_;
}
inline void BoolResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:guldan.BoolResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace guldan

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED__5fcommon_2eproto
